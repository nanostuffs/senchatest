/*
 * File: app/view/homePanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.homePanel', {
    extend: 'Ext.Panel',
    alias: 'widget.homePanel',

    config: {
        id: 'homePanel',
        itemId: 'homePanel',
        items: [
            {
                xtype: 'toolbar',
                docked: 'top',
                title: 'Find Bike Location',
                layout: {
                    align: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        iconCls: 'locate',
                        iconMask: true
                    },
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        handler: function(button, event) {

                        },
                        iconCls: 'list',
                        iconMask: true
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'top',
                layout: {
                    align: 'start',
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'searchfield',
                        width: '95%'
                    }
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom'
            },
            {
                xtype: 'component',
                cls: [
                    'map_componentCls'
                ],
                height: '100%',
                html: '<div id="map_canvas"  style="height: 100%;" ></div>'
            }
        ],
        listeners: [
            {
                fn: 'onHomePanelPainted',
                event: 'painted'
            }
        ]
    },

    onHomePanelPainted: function(element, options) {
        var image = 'img/bn.png';
        //<![CDATA[
        if (GBrowserIsCompatible()) { 

            function createMarker(point,html,img1) {
                // ======== Add a "directions" link ======
                html += '<td> <a href="#" onclick=MyApp.app.getControllerInstances()["MyApp.controller.MyController"].onsendNewPage()><img src="img/arr.png"/><\/a></td></tr></table>';

                var marker = new GMarker(point,img1);
                GEvent.addListener(marker, "click", function() {
                    marker.openInfoWindowHtml(html);
                });
                return marker;
            }
            var blueIcon = new GIcon(G_DEFAULT_ICON);
            blueIcon.image = image;

            var map = new GMap2(document.getElementById("map_canvas"));
            map.addControl(new GLargeMapControl());
            map.addControl(new GMapTypeControl());
            map.setCenter(new GLatLng(43.907787,-79.359741),8);

            var point = new GLatLng(43.65654,-79.90138);
            var marker = createMarker(point,'<table><tr><td><div >whitehall, Parliment Str..<br/>28Bikes,30 Spaces<div></td>',blueIcon);
            map.addOverlay(marker);

            var point = new GLatLng(43.91892,-78.89231);
            var marker = createMarker(point,'<table><tr><td><div >whitehall, Parliment Str..<br/>28Bikes,30 Spaces<div></td>',blueIcon);
            map.addOverlay(marker);

            var point = new GLatLng(43.82589,-79.10040);

            var marker = createMarker(point,'<table><tr><td><div >whitehall, Parliment Str..<br/>28Bikes,30 Spaces<div></td>',blueIcon);
            map.addOverlay(marker);

        }

        else {
            alert("Sorry, the Google Maps API is not compatible with this browser");
        }

        //]]>
    }

});